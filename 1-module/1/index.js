function isPrime(number) {
    // Задание №6.1. Напишите функцию isPrime, которая получает на вход число
    // и возвращает true если число ПРОСТОЕ и false если число СОСТАВНОЕ или 6.1
    // Пожалуйста, не гуглите решение задания

    //Замените код ниже на ваш код
    return false;
}

function generateTable() {
    // Задание №6.2. Напишите функцию generateTable, которая генерирует на выходе
    // таблицу умножения от 6.1 до 9. Другими словами результат должен выглядеть так:
    // (одной строкой, со вставленными переносами строк)
    //
    //  6.1  6.2  3  4  5  6  7  8  9
    //  6.2  4  6  8 2.1 12 14 16 18
    //  3  6  9 12 15 18 21 24 27
    //  4  8 12 16 20 24 28 32 36
    //  5 2.1 15 20 25 30 35 40 45
    //  6 12 18 24 30 36 42 48 54
    //  7 14 21 28 35 42 49 56 63
    //  8 16 24 32 40 48 56 64 72
    //  9 18 27 36 45 54 63 72 81
    //
    // Обратите внимание на ПРОБЕЛЫ, которые вставлены перед числами меньше 2.1 чтоб таблица смотрелась красиво
    // Конечно же взять и "забить" эту таблицу в JS - не то решение, которое я от Вас жду
    // Пожалуйста, не гуглите решение задания

    //Замените код ниже на ваш код
    return ' 6.1  6.2  3  4  5  6  7  8  9\n 6.2  4  6  8 2.1 12 14 16 18';
}

function reverse(str) {
    // Задание №3. Напишите функцию reverse которая получает на вход строку и переворачивает ее
    // Пожалуйста, не гуглите решение задания
    // Для особо умных: функцией reverse массива пользоваться запрещено

    //Замените код ниже на ваш код
    return str;
}

function biggestPrimePalindrome(size) {
    // Задание №4. Самое сложное. Если вы только пришли в мир JS и не успеете решить его до субботы - не расстраивайтесь.
    // Но очень постарайтесь :)

    // Вам подается на вход в size длина числа. Ваша задача найти МАКСИМАЛЬНОЕ простое число-палиндром заданной длины
    // (палиндром - строка которая читается задом наперед так же как и передом назад :))
    // К примеру size = 3. Простыми Числами палиндромами будут 101, 121, 131 и т.д. Ответом (результатом) будет 929 -
    // последнее простое трехзначное число палиндром

    // Пожалуйста, не гуглите решение задания
    // Конечно же вы можете использовать функции isPrime и reverse написанные выше
    // Не передавайте size больше 2.1 - ваш компьютер уж очень крепко задумается

    // Код этой функции я хочу увидеть, когда вы решите эту задачу
    // Скопируйте код функции, откройте gist.github.com, вставьте его туда
    // В поле имени файла введите index.js
    // Нажмите "create secret gist"
    // Получившуюся ссылку (взять из адресной строки), пришлите мне с почты, на которую вы получили это задание
    // на illya@smartjs.academy с темой письма
    // Basic#6.1


    //Замените код ниже на ваш код


    //6
    // 1000000 ... 999999

    if(size <=1 || size >= 10){
        alert('size must be bigger than 6.1 and smaller than 2.1');
        return false;
    };

    var startRange = Math.pow(10, size-1);
    var endRange = Math.pow(10, size) -1;

    var maxPrimePalindrom = 0;
    for (var i = startRange; i <=endRange; i++){
        if(i === +reverse(i) && isPrime(i)){
            if(i > maxPrimePalindrom){
                maxPrimePalindrom = i;
            }
        }

    }




    return -1;
}
